@addTagHelper *,Microsoft.AspNetCore.Mvc.TagHelpers
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    var questions = ViewBag.Questions as List<Question>;
    var answers = ViewBag.Answers as List<Answer>;
    int index = 0;
    int i = 0;
    string username = Context.Session.GetString("username");
    string displayName = Context.Session.GetString("displayName");
}
@using Online_English_Quiz_Project.Models;
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Lunasima:wght@400;700&family=Roboto+Condensed:wght@300;400;700&family=Roboto+Mono:ital,wght@0,300;0,400;0,500;1,200;1,400&family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
<style>
    * {
        /*border: 1px solid red;*/
        font-family: 'Roboto', sans-serif;
    }

    .inExam {
        display: none
    }

    .container {
        margin:2rem 2rem;
    }

    .quizContainer {
        height: 38.8vh;
        overflow: hidden;
        margin: 0;
        padding: 0;
    }
    p{
        margin-top:7px;
        margin-bottom: 7px;
        padding: 0;
    }
    h3 {
        margin: 0;
        padding: 0;
        
    }
    .questionNumber h3{
        white-space: nowrap;
    }
    .questionNumber{
        border-right: 2px solid rgba(0,0,0,0.2);
    }
    .quizContainer:last-child {
    }

    .examBody {
        font-size: 1.3rem;
        display: flex;
        width: 100%;
        flex-direction:row;

    }

    .left {
        width: 80%;
        border-top: 2px solid #fd647a;
        border-right: 2px solid rgba(0,0,0,0.2);
        padding-top: 7px;
        padding:10px 20px 10px 20px;
        border-radius: 5px;
    }

    .right {
        width: 20%;
        margin-left: 20px;
        border-top: 2px solid #5bc0de;
        padding: 10px 20px 10px 20px;
        border-radius: 5px;

    }

    .quizChild {
        height: 100% !important;
        width:100%;
        display: flex;
        
        margin: 0;
        padding: 0;

    }

    .questionNumber {
        width: min-content;
        margin-right: 30px;
    }

    .nav-item {
        border: 1px solid;
        padding: 5px;
        border-radius: 5px;
        width: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    a {
        text-decoration: none;
        color:black;
    }

    .examNavigation {
        
        display: grid;
        grid-template-columns: repeat(6,1fr );
        gap: 10px;
        width: min-content;
        margin:auto;

    }
    .answer{
        margin: 10px;
        
    }
    *{
        
        
    }
    .examTitle{
        font-size: 1.3rem;
    }
    #timer{
        font-weight:bold;
    }
    .takeQuizz-util{
        margin: 7px 0px 7px 0px;
    }
    .questionButton{
        display:flex;
        flex-direction:row;
        justify-content:space-between;

    }
    .questionButton a{
        font-size: 1.3rem;
        border:1px solid black;
        margin-bottom:5px;
        padding: 5px;
        background-color: #fd647a;
    }
    .quizQuestion{
        font-size: 1.3rem;
        width:85%;
        display:flex;
        flex-direction: column;
        justify-content: space-between;
    }
    .questionNumber{
        font-size: 1.3rem;
        width:10%;
    }
    #quiz-form{
        margin:0;
        padding:0;
        height:100%;
    }
    .submitButton{
        font-weight: 500;
        width: 100%;
        font-size: 1.3rem;
    }
    .active{
        background-color: lightgreen;
    }

    .header {
        display: flex;
        justify-content: end;
        font-size: 20px;
    }
    .header a{
        text-decoration:none;
        font-weight: 600;
        color: #fd647a;
    }
    .dropDown {
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .examInfo{
        font-size: 1.3rem;
    }
    #start{
        font-size: 1.3rem;
        border: 1px solid black;
        margin-bottom: 5px;
        margin-top: 15px;
        padding: 5px;
        background-color: #fd647a;
    }
</style>
<div class="container">
    <div class="header">
        @if (username != null)
        {
            <div class="dropDown">
                <p>Hi, @displayName &nbsp</p>
                <a href="/logout">Logout</a>
            </div>
        }
        else
        {
            <div>

                <a href="/login">Login</a>
            </div>
        }

    </div>
    <div class="preExam">
        <div class="examTitle">
            <h1>
                @ViewBag.QuizTitle
            </h1>

        </div>
        <div class="examInfo">
            <p>Duration: 30 minutes</p>
            <p>Number of Question: @questions.Count</p>
            <p>Number of Attempt: 1</p>
        </div>
        <button id="start" class="questionButton" onclick="startQuiz()">START EXAM</button>
    </div>
    <div class="inExam">
        <div class="examTitle">
            <h1>
                @ViewBag.QuizTitle
            </h1>

        </div>
        <div class="examBody">
            <div class="left">
                <form id="quiz-form" action="../submit/@ViewBag.QuizId" method="post">
                    <input type="text" value="@Context.Session.GetString("username")" name="username" hidden />
                    <input type="text" value="@questions.Count" name="total" hidden />
                    <div class="quizContainer">
                        @foreach (var question in questions)
                        {
                            int temp = index + 1;
                            <div id="@index+go" class="quizChild">
                                <div class="questionNumber">
                                    <h3>
                                        Question @temp:
                                    </h3>
                                </div>
                                <div class="quizQuestion" >

                                    <h3>
                                        @question.QuestionText
                                    </h3>

                                    @foreach (var answer in answers)
                                    {
                                        if (answer.QuestionId == question.QuestionId)
                                        {
                                            <div class="answer">
                                                <input type="radio" id="@index.@answer.AnswerId" name="answers[@index]" value="@answer.AnswerId" onchange="toggleOptionItemClass(this)">
                                                <label for="@index.@answer.AnswerId">@answer.AnswerText</label>
                                            </div>
                                        }

                                    }

                                    <br />
                                    <div class="questionButton">
                                    @if (index != 0)
                                    {
                                        index--;
                                        <a href="#@index+go">
                                            previous question
                                        </a>
                                        index++;
                                    }

                                    @if (index != questions.Count - 1)
                                    {
                                        index++;
                                        <a href="#@index+go">
                                            next question
                                        </a>
                                    }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                </form>

            </div>
            <div class="right">
                <p>Quiz Navigation:</p>
                <div class="examNavigation">

                    @foreach (var question in questions)
                    {
                        int temp = i + 1;
                        <div class="nav-item" id="@i">
                            <a href="#@i+go" >@temp</a>
                        </div>
                        if (i % 5 == 4)
                        {

                        }
                        i++;
                    }
                </div>
                <section class="takeQuizz-util">
                    <p>Time Left: <span id="timer">30:00</span></p>
                </section>
                <div>
                    <button class="submitButton" onclick="submitQuiz()">SUBMIT</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    const button = document.getElementById("start")
    const timerElement = document.getElementById("timer");
    button.addEventListener("click", () => {
        startCountdown();

        document.getElementsByClassName("preExam")[0].style.display = "none";
        document.getElementsByClassName("inExam")[0].style.display = "block";
    });
    function startQuiz() {
        startCountdown();
        document.getElementsByClassName("preExam").style.display = "none";
        document.getElementsByClassName("inExam").style.display = "block";
    }
    function startCountdown() {
        let timeLeft = 1 * 1800;

        const countdownInterval = setInterval(() => {
            const minutes = Math.floor(timeLeft / 60);
            const seconds = timeLeft % 60;

            timerElement.textContent = `${padZero(minutes)}:${padZero(seconds)}`;

            if (timeLeft > 0) {
                timeLeft--;
            } else {
                clearInterval(countdownInterval);
                document.getElementById("quiz-form").submit();

            }
        }, 1000);
    }

    function padZero(number) {
        return number.toString().padStart(2, "0");
    }

    function submitQuiz() {
        document.getElementById("quiz-form").submit();
    }
    function toggleOptionItemClass(checkbox) {

        var value = Math.floor(parseFloat(checkbox.id));
        var taga = document.getElementById(value);
        checkbox.id;
        console.log(checkbox.id + "id ne");
        if (checkbox.checked) {
            taga.classList.add("active");
        } else {
        }
    }
</script>